[{"model": "lessons.lesson", "pk": 11, "fields": {"name": "ML Lesson #2", "date_published": "2019-02-03T13:07:53Z", "content": "# Machine Learning\r\n\r\n### Vestibulum dapibus ac libero id placerat. Pellentesque convallis odio nisl, ut vulputate sapien tincidunt iaculis. Curabitur egestas tempus semper. Ut rutrum nec nunc ut dapibus. In malesuada sapien nec nisi condimentum, ullamcorper dapibus nibh ornare.\r\n\r\nNulla facilisi. Mauris quis ultricies ante. Ut eu urna in nunc ornare ullamcorper. Morbi lacinia mollis volutpat. Aenean elementum lectus sit amet ante luctus sollicitudin. Maecenas volutpat vulputate ante, in scelerisque augue luctus quis. In varius mi consequat velit varius sodales. Nulla volutpat, magna vitae blandit condimentum, lectus enim tempor nulla, at mollis nulla libero id est. Fusce pellentesque bibendum tellus, quis tempor libero molestie et. In pulvinar sollicitudin varius. Quisque eleifend metus at imperdiet accumsan. Ut dictum sit amet elit et ornare. Pellentesque euismod nulla odio, vitae commodo massa fermentum eget. Phasellus vestibulum, augue vel laoreet condimentum, mauris magna consectetur purus, non faucibus risus magna eu felis. Nunc pellentesque lorem nec iaculis vehicula. Mauris quis tristique eros, a viverra odio.\r\n\r\nFusce elementum fringilla neque in pretium. Nunc ullamcorper pulvinar erat eu tempor. In hac habitasse platea dictumst. Pellentesque ultrices lectus felis, nec scelerisque mauris elementum nec. Mauris auctor velit elit, in elementum metus molestie ac. Sed vitae lacus eros. Sed ut diam hendrerit, convallis nulla a, mattis mi. Integer iaculis euismod rhoncus. In fermentum vel nibh nec varius. Aliquam vel ex quis sapien dapibus rutrum. Vestibulum ac tortor vel nisl lobortis lacinia id ut magna. Cras finibus mi nec velit interdum, sit amet sagittis justo posuere. Nullam ultrices justo a ex mattis venenatis. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.", "code": "# Enter your code here:"}}, {"model": "lessons.lesson", "pk": 13, "fields": {"name": "Introduction", "date_published": "2019-03-08T14:53:23Z", "content": "In this lesson, we\u2019ll be covering Binary Classifiers. Given an input, they can display two outputs to describe the input, either a 1 or a 0. This kind of classifier is used a lot in natural language processing since we can determine what a person thinks of something (a product, book, etc.) without reading their review by hand.\r\n\r\n  \r\n\r\nWith this example, we\u2019re going to be classifying 50,000 movie reviews. These are split into 25,000 reviews for training and 25,000 reviews for testing. These sets have equal numbers of positive and negative reviews. This is called a balanced dataset. Remember that in the training dataset, we have to have labels to train the neural network with. Each of the 25,000 reviews in the training set are paired with labels of either 0 or 1. A 0 represents a negative review while a 1 represents a positive review. Our goal with this model will be to classify the positive and negative reviews in our testing dataset.\r\n\r\n  \r\n\r\nLet\u2019s do our imports:\r\n\r\n```\r\nfrom __future__ import absolute_import, division, print_function\r\nimport numpy as np\r\nimport tensorflow as tf\r\nfrom tensorflow import keras\r\n```", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 14, "fields": {"name": "Import Dataset", "date_published": "2019-03-08T14:53:55Z", "content": "Now we can import our dataset. To save space in the data, the words are initially represented as numbers referring to words in a dictionary. In the lines after we import the dataset, we run a couple of functions to turn those numbers back into text, so we can understand our data better.\r\n\r\n```\r\nimdb = keras.datasets.imdb(train_data, train_labels), \r\n(test_data, test_labels) = imdb.load_data(num_words=10000)\r\n\r\nword_index = imdb.get_word_index()\r\nword_index = {k:(v+3) for k,v in word_index.items()} \r\nword_index[\"<PAD>\"] = 0\r\nword_index[\"<START>\"] = 1\r\nword_index[\"<UNK>\"] = 2  # unknown\r\nword_index[\"<UNUSED>\"] = 3\r\nreverse_word_index = dict([(value, key) for (key, value) in word_index.items()])\r\ndef decode_review(text):    \r\n\treturn ' '.join([reverse_word_index.get(i, '?') for i in text])\r\n```\r\n\r\nLet\u2019s look at our data:\r\n\r\n```\r\nprint(\"Training entries: {}, labels: {}\".format(len(train_data), len(train_labels)))\r\n```\r\n\r\nWe can see our 25000 training entries paired with 25000 labels. Remember, these labels are either 0 or 1, describing their associated review as either \u201cnegative\u201d or \u201cpositive\u201d.\r\n\r\nLet us now look at the code for the first review in our training set:\r\n\r\n```\r\ndecode_review(train_data[0])\r\n```", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 15, "fields": {"name": "Data Preparation", "date_published": "2019-03-08T14:54:23Z", "content": "Having these reviews in plaintext is all well and good, but we need to have them in the form of matrices to be able to do any machine learning.\r\n\r\nThe way we've learnt to prepare classification before is one-hot encoding. If you remember, this is the process of creating a column in the matrix for every class, with each column having either 1's or 0's depending on if that classification describes the data or not.\r\n\r\nIn this case, using one-hot encoding would require 10,000 input vectors, with 25,000 elements each, leading to very large matrix calculation involving 10000 by 25000 matrices.\r\n\r\nInstead, we'll use a different method today. We can give all the reviews a padding so that they are all the same exact length. Lets assume that maximum length is 100 letters; now we are able to create a matrix of size 100 * 25,000, which is much easier to process than the one-hot encoding method. We'll then dedicate a layer to handle this shape and turn it into meanigful data.\r\n\r\nFirst, let's pad the reviews to the same size:\r\n\r\n```\r\ntrain_data = keras.preprocessing.sequence.pad_sequences(train_data,                                                        value=word_index[\"<PAD>\"],                                                        padding='post',                                                        maxlen=256)\r\ntest_data = keras.preprocessing.sequence.pad_sequences(test_data,                                                       value=word_index[\"<PAD>\"],                                                       padding='post',                                                       maxlen=256)\r\n```\r\n\r\nNow, each review should be the same length, let's check:\r\n\r\n```\r\nlen(train_data[0]), len(train_data[1])\r\n```", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 16, "fields": {"name": "Designing the Model", "date_published": "2019-03-08T14:54:44Z", "content": "Machine Learning engineers have to undertake the task of deciding multiple characteristics of the neural network. These include:\r\n\r\n- How many layers should be used in the model?\r\n- How many *hidden units* should be in each layer?\r\n\r\nYou should remember from previous classes that the layers contain units that are activated by the units in the layer before them, with the last layer producing the final output. \r\n\r\nThe hidden units are the units inside the hidden layers that we have no direct control over, their *activation values* (parameters that determine how much they are affected by the previous layer) are decided by the machine learning model. \r\n\r\n*We won't go into how to choose the number of layers or number of hidden units to be used in each layer since it's a skill that machine learning engineers learn through a lot of experience.* \r\n\r\nLet's move onto building our model:\r\n\r\n```\r\nvocab_size = 10000 # Input layers \r\nmodel = keras.Sequential()\r\nmodel.add(keras.layers.Embedding(vocab_size, 16))\r\nmodel.add(keras.layers.GlobalAveragePooling1D())\r\nmodel.add(keras.layers.Dense(16, activation=tf.nn.relu))\r\nmodel.add(keras.layers.Dense(1, activation=tf.nn.sigmoid))\r\nmodel.summary()\r\n```\r\n\r\nThe layers are stacked sequentially to build the classifier:\r\n\r\n1. The first layer is an `Embedding` layer. This layer takes the integer-encoded vocabulary and looks up the embedding vector for each word-index.\r\n2. Next, a `GlobalAveragePooling1D` layer returns a fixed-length output vector for each example by averaging over the sequence dimension. This allows the model to handle input of variable length, in the simplest way possible, meaning we don't have to use one-hot encoding.\r\n3. This fixed-length output vector is passed through a fully-connected (`Dense`) layer with 16 hidden units.\r\n4. The last layer is densely connected with a single output node. Using the `sigmoid` activation function, which we explained in an earlier class, this value is a decimal value between 0 and 1, representing a probability, or confidence level.", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 17, "fields": {"name": "Loss Function", "date_published": "2019-03-08T14:55:11Z", "content": "The loss function is the function that decides how the neural network is changed depending on how accurately it predicts the training set. Lets create this now:\r\n\r\n```\r\nmodel.compile(optimizer='adam',loss='binary_crossentropy', metrics=['accuracy'])\r\n```\r\n\r\nNow, from previous lessons, we know that the most important thing to be careful with on creating machine learning algorithms is they work on *generalized* datasets (datasets comprised of data points they haven't seen before). For this reason, we'll create a validation set of 10,000 examples (out of the 25,000 total training examples). Since we're treating the testing set as unknown data for now, we can't use that as a validation set until we've finished creating the neural network. \r\n\r\n```\r\nx_val = train_data[:10000]\r\npartial_x_train = train_data[10000:]\r\ny_val = train_labels[:10000]\r\npartial_y_train = train_labels[10000:]\r\n```", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 18, "fields": {"name": "Training the Model", "date_published": "2019-03-08T14:56:48Z", "content": "The loss function is the function that decides how the neural network is changed depending on how accurately it predicts the training set. Lets create this now:\r\n\r\n```\r\nmodel.compile(optimizer='adam',loss='binary_crossentropy', metrics=['accuracy'])\r\n```\r\n\r\nNow, from previous lessons, we know that the most important thing to be careful with on creating machine learning algorithms is they work on *generalized* datasets (datasets comprised of data points they haven't seen before). For this reason, we'll create a validation set of 10,000 examples (out of the 25,000 total training examples). Since we're treating the testing set as unknown data for now, we can't use that as a validation set until we've finished creating the neural network. \r\n\r\n```\r\nx_val = train_data[:10000]\r\npartial_x_train = train_data[10000:]\r\ny_val = train_labels[:10000]\r\npartial_y_train = train_labels[10000:]\r\n```", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 19, "fields": {"name": "Evaluating the Model", "date_published": "2019-03-08T14:56:56Z", "content": "Now we've created the model, we can see how well it performs classifying unseen testing data. \r\n\r\n```\r\nresults = model.evaluate(test_data, test_labels)\r\n\r\nprint(results)\r\n```\r\n\r\nAs you can see, we achieved an accuracy of over 85%, which is quite impressive. This means less than 1 in 6 reviews were classified incorrectly.", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 20, "fields": {"name": "Visualizing our Accuracy", "date_published": "2019-03-08T14:58:17Z", "content": "Let's use MatPlotLib to visualise our training history:\r\n\r\n```\r\nimport matplotlib.pyplot as plt\r\nacc = history_dict['acc']\r\nval_acc = history_dict['val_acc']\r\nloss = history_dict['loss']\r\nval_loss = history_dict['val_loss']\r\nepochs = range(1, len(acc) + 1)\r\n\r\nplt.plot(epochs, acc, 'bo', label='Training acc')\r\nplt.plot(epochs, val_acc, 'b', label='Validation acc')\r\nplt.title('Training and validation accuracy')\r\nplt.xlabel('Epochs')\r\nplt.ylabel('Accuracy')\r\nplt.legend()plt.show()\r\n```\r\n\r\nAs you can see, after around Epoch 20, our *validation* accuracy (the important one, referring to our testing data), starts to plateau and decrease. This means that possibly, we are overfitting (from our previous class, this refers to when the neural network ends up fitting the training data so well that it has trouble generalising to testing data). In this case, we could avoid this by stopping the training after 20 epochs.", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 21, "fields": {"name": "Conclusion", "date_published": "2019-03-08T14:59:12Z", "content": "Well done, you have just produced your first binary classification algorithm. That was tough, so you should be really proud of yourself! Great job \ud83d\udc4d", "code": "# Congratulations on finishing the topic"}}, {"model": "lessons.lesson", "pk": 22, "fields": {"name": "Example Lesson", "date_published": "2019-03-08T15:03:08Z", "content": "## Here you can test out the code editor\r\n\r\nSince this is an actual ML computation, it will take time to compute (~8 seconds)\r\n\r\n*This lesson is just a demonstration and not part of the final product*", "code": "# Courtesy of Tensorflow\r\nimport tensorflow as tf\r\nmnist = tf.keras.datasets.mnist\r\n\r\n(x_train, y_train),(x_test, y_test) = mnist.load_data()\r\nx_train, x_test = x_train / 255.0, x_test / 255.0\r\n\r\nmodel = tf.keras.models.Sequential([\r\n  tf.keras.layers.Flatten(input_shape=(28, 28)),\r\n  tf.keras.layers.Dense(128, activation='relu'),\r\n  tf.keras.layers.Dropout(0.2),\r\n  tf.keras.layers.Dense(10, activation='softmax')\r\n])\r\n\r\nmodel.compile(optimizer='adam',\r\n              loss='sparse_categorical_crossentropy',\r\n              metrics=['accuracy'])\r\n\r\nmodel.fit(x_train, y_train, epochs=1)\r\nmodel.evaluate(x_test, y_test)"}}, {"model": "lessons.lesson", "pk": 23, "fields": {"name": "Introduction", "date_published": "2019-03-08T16:06:07Z", "content": "The main focus of this lesson is regression. Regression is a very widely-used type of predictive analysis in which the goal is estimate the result of a continuous value, like prices for instance. This is different than classifiers, which will be discussed at a later lesson, which aim to distinguish an object from a list of object, like identifying which number a particular images displays through a list of all digits.\r\n\r\nIn this lesson, we will use a data set of Auto MPG to estimate the fuel consumption of cars in the past. Let\u2019s start by importing the libraries that are required and downloading the data set\r\n\r\n```python\r\nfrom __future__ import absolute_import, division, print_function\r\nimport pathlib\r\nimport pandas as pd\r\nimport seaborn as sns\r\nimport tensorflow as tf\r\n\r\nfrom tensorflow import keras\r\nfrom tensorflow.keras import layers\r\ndataset_path = keras.utils.get_file(\"auto-mpg.data\", \"https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data\")\r\n\r\ndataset_path\r\n```", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 24, "fields": {"name": "Preparing Our Data", "date_published": "2019-03-08T16:09:42Z", "content": "To continue, we should next import the dataset to work with and adapt it to make it appropriate for this tutorial, by running the code below:\r\n\r\n```\r\ncolumn_names = ['MPG','Cylinders','Displacement','Horsepower','Weight', 'Acceleration', 'Model Year', 'Origin']\r\nraw_dataset = pd.read_csv(dataset_path, names=column_names, na_values = \"?\", comment='\\t',\r\nsep=\" \", skipinitialspace=True)\r\ncolumn_names = ['MPG','Cylinders','Displacement','Horsepower','Weight', 'Acceleration', 'Model Year', 'Origin']\r\n\r\nraw_dataset = pd.read_csv(dataset_path, names=column_names, na_values = \"?\", comment='\\t', sep=\" \", skipinitialspace=True)\r\n\r\ndataset = raw_dataset.copy()\r\ndataset.tail()  \r\n\r\ndataset = dataset.dropna()\r\norigin = dataset.pop('Origin')  \r\ndataset['USA'] = (origin == 1)*1.0\r\ndataset['Europe'] = (origin == 2)*1.0\r\ndataset['Japan'] = (origin == 3)*1.0\r\ndataset.tail()\r\n```", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 25, "fields": {"name": "Separating Labels from Data", "date_published": "2019-03-08T16:10:18Z", "content": "Afterwards, we should split our dataset into two parts: one for training the model and one for testing:\r\n\r\n```\r\ntrain_dataset = dataset.sample(frac=0.8,random_state=0)\r\ntest_dataset = dataset.drop(train_dataset.index)\r\n```\r\n\r\nThe next step is to separate the labels from the actual data, as labels are the ones that are going to be used for training the model and define a function to normalise all data:\r\n\r\n```\r\ntrain_labels = train_dataset.pop('MPG')\r\ntest_labels = test_dataset.pop('MPG')  \r\ndef norm(x):\r\nreturn (x - train_stats['mean']) / train_stats['std']\r\nnormed_train_data = norm(train_dataset)\r\nnormed_test_data = norm(test_dataset)\r\n```\r\n\r\nFollowing that, it\u2019s finally the time to define a function building the model, in a way to return a continuous value and then run it:", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 26, "fields": {"name": "Building our Model", "date_published": "2019-03-08T16:11:01Z", "content": "It\u2019s finally the time to define a function building the model, in a way to return a continuous value and then run it:\r\n\r\n```\r\ndef build_model():\r\n    model = keras.Sequential([layers.Dense(64, activation=tf.nn.relu, input_shape=[len(train_dataset.keys())]), layers.Dense(64, activation=tf.nn.relu), layers.Dense(1)])\r\n    optimizer = tf.keras.optimizers.RMSprop(0.001)\r\n    model.compile(loss='mse', optimizer=optimizer, metrics=['mae', 'mse'])\r\n    return model\r\n\r\nmodel = build_model()\r\n```\r\n\r\nBut let\u2019s also use this data to now train the model, while inspecting the accuracy of this training at the same time:\r\n\r\n```\r\nclass PrintDot(keras.callbacks.Callback):\r\n\tdef on_epoch_end(self, epoch, logs):\r\n\t\tif epoch % 100 == 0: print('')\r\n\t\tprint('.', end='')\r\nEPOCHS = 1000\r\nhistory = model.fit(normed_train_data, train_labels, epochs=EPOCHS, validation_split = 0.2, verbose=0, callbacks=[PrintDot()])\r\n```", "code": "# Enter your code below"}}, {"model": "lessons.lesson", "pk": 27, "fields": {"name": "Plot our Error Values", "date_published": "2019-03-08T16:12:11Z", "content": "And if we plot the data above using MatPlotLib at the current state of the lesson a graph like this should arise:\r\n\r\n![img](https://lh5.googleusercontent.com/3xt3smfGOvH_KZiMdZ_j_qVC0_Qtclhh1bp4aOaxhmOlYg36gbiWnC0oUZUhmio22Z2XcX_wO_gjEki8-gJVCOk-SlEed3f9jXaB6uWpab5pZLqMPTnRCrPHfATFg3e3aNuwBlMF)\r\n\r\nHowever, through this we can clearly see that the larger the EPOCH we get, the less accurate our sample becomes. Consequently, it would be a good idea to stop our program training when the validation starts getting worse. To do that, we will code it to abandon training once a specific number of epochs passes without any signs of improvement:", "code": "# No code to write for this section"}}, {"model": "lessons.lesson", "pk": 28, "fields": {"name": "Reducing Number of Epochs", "date_published": "2019-03-08T16:12:56Z", "content": "```\r\nearly_stop = keras.callbacks.EarlyStopping(monitor='val_loss', patience=10)\r\n\r\nhistory = model.fit(normed_train_data, train_labels, epochs=EPOCHS, validation_split = 0.2, verbose=0, callbacks=[early_stop, PrintDot()])\r\n\r\nplot_history(history)\r\n```\r\n\r\nPlotting the data using MatPlotLib should now give a much better result, with an uncertainty of only 1.5 MPG:\r\n\r\n![img](https://lh6.googleusercontent.com/s3NxFdZaP7H3S5iHXnBMziYM5RKNZOBJbzo_Cug-wX6KNuMwLxrSdhjaozITGsRTrCNr06gXTnSQELKdv83rZ0T6F-j5f422YoTfZylSeWjV1asKFt8fhFUnoXuTkRzyeA0PdCUC)", "code": "# Enter your data below"}}, {"model": "lessons.lesson", "pk": 29, "fields": {"name": "Predict our MPG", "date_published": "2019-03-08T16:15:00Z", "content": "Last but not least, we should now predict the MPG using the test data set, that we created at the beginning:\r\n\r\n```\r\ntest_predictions = model.predict(normed_test_data).flatten()\r\n\r\nplt.scatter(test_labels, test_predictions)\r\nplt.xlabel('True Values [MPG]')\r\nplt.ylabel('Predictions [MPG]')\r\nplt.axis('equal')\r\nplt.axis('square')\r\nplt.xlim([0,plt.xlim()[1]])\r\nplt.ylim([0,plt.ylim()[1]])\r\n_ = plt.plot([-100, 100], [-100, 100])\r\n```\r\n\r\nIf you managed to follow along correctly, the MPG values that arise are the following, so the model that we created appears to be pretty accurate:\r\n\r\n![img](https://lh6.googleusercontent.com/b4ib2Qm6zHrxcmKREZAHAf_idJ3JfO8SEzohfSX8ecwMATq8NffdLmaMC77oM28MbF5p1bxU4AhxP0d7EZWm8ddcjFXvAaNXwvoT-0TPcMnZIict8pMIuvKjollIrj8TTc16oA-I)", "code": "# Enter your code below"}}, {"model": "lessons.topic", "pk": 9, "fields": {"name": "Class 5 - Binary Classifier", "available": true, "description": "Build a Neural Network to classify movie reviews from the IMDb database.", "image_url": "https://mlacademy.blob.core.windows.net/assets/movie.jpg", "difficulty": 10, "colour": "1", "lesson1": 13, "lesson2": 14, "lesson3": 15, "lesson4": 16, "lesson5": 17, "lesson6": 18, "lesson7": 19, "lesson8": 20, "lesson9": 21, "lesson10": null, "prerequisites": [10, 11]}}, {"model": "lessons.topic", "pk": 10, "fields": {"name": "Class 0 - Try it out", "available": true, "description": "Try out our editor (For demonstration purposes only)", "image_url": "https://mlacademy.blob.core.windows.net/assets/test.jpeg", "difficulty": 0, "colour": "1", "lesson1": 22, "lesson2": null, "lesson3": null, "lesson4": null, "lesson5": null, "lesson6": null, "lesson7": null, "lesson8": null, "lesson9": null, "lesson10": null, "prerequisites": []}}, {"model": "lessons.topic", "pk": 11, "fields": {"name": "Class 4 - Regression Model", "available": true, "description": "Build a regression model to find the MPG of vintage cars based on their engines", "image_url": "https://mlacademy.blob.core.windows.net/assets/engine.jpg", "difficulty": 4, "colour": "1", "lesson1": 23, "lesson2": 24, "lesson3": 25, "lesson4": 26, "lesson5": 27, "lesson6": 28, "lesson7": 29, "lesson8": null, "lesson9": null, "lesson10": null, "prerequisites": [10]}}, {"model": "lessons.student", "pk": 12346, "fields": {"uid": "6789", "completed_lessons": [], "completed_topics": []}}, {"model": "lessons.student", "pk": 12357, "fields": {"uid": "U1h9cpqVv9T9LEl1e2KKM6yAyNx2", "completed_lessons": [], "completed_topics": []}}, {"model": "lessons.student", "pk": 12358, "fields": {"uid": "MTA5MjJkOWEtYTBkMC00ZmRiLTllNjctZTgwMjZiYzI4NTA1.MWZhZjg4ZmUtYTk5OC00YzViLTkzYzktMjEwYTExZDlhNWMy", "completed_lessons": [], "completed_topics": []}}, {"model": "lessons.student", "pk": 12359, "fields": {"uid": "NjUyMTkxZmItODBiNS00ZWU2LTkwMTUtY2JjZmIzYWU1NmZm.MWZhZjg4ZmUtYTk5OC00YzViLTkzYzktMjEwYTExZDlhNWMy", "completed_lessons": [], "completed_topics": [10]}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "lessons", "model": "lesson"}}, {"model": "contenttypes.contenttype", "pk": 11, "fields": {"app_label": "lessons", "model": "topic"}}, {"model": "contenttypes.contenttype", "pk": 12, "fields": {"app_label": "lessons", "model": "student"}}, {"model": "contenttypes.contenttype", "pk": 13, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 14, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 15, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 16, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 17, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 18, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "sessions.session", "pk": "1y1b811bikbxy3s5b6vuvops7pjtywd5", "fields": {"session_data": "MmZjM2M3YjA2Njg2YzA5NzBmNzIyNWUxNzQ0YjY4OWIyZWE1YTlkNzp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhNTA0MzJiNjAyM2QxODc2OWRjMDA4ZmU0NmIzNGVlYzU2M2M3ZTE2In0=", "expire_date": "2019-03-27T12:11:36.036Z"}}, {"model": "sessions.session", "pk": "2foxe1i7o2ymvvv6s415c2mzfc7fo6pc", "fields": {"session_data": "OWY4ZDNmMjlmY2JkNGM1Y2IxYWNiYjJlNDY5MTM0YjFlZWNhYTBkZTp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI0Yjc1NjU0NzlmYjRiMTFiYjRhNzBhNTZlMjQ4YjNlMjQ0NmMwYmJmIn0=", "expire_date": "2019-02-09T13:09:18.960Z"}}, {"model": "sessions.session", "pk": "5c8azguqi1ypew6su0etx05qj1gjtfpu", "fields": {"session_data": "MmZjM2M3YjA2Njg2YzA5NzBmNzIyNWUxNzQ0YjY4OWIyZWE1YTlkNzp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhNTA0MzJiNjAyM2QxODc2OWRjMDA4ZmU0NmIzNGVlYzU2M2M3ZTE2In0=", "expire_date": "2019-03-27T14:37:33.152Z"}}, {"model": "sessions.session", "pk": "88vqrrwiji0mbesqvrldfe4o5nf52low", "fields": {"session_data": "ODc3Yzk5YTFmZGJlN2FkMTcxNDZmZDc4MDUxYWE1YmIzZjMxZDY3NDp7Il9hdXRoX3VzZXJfaGFzaCI6ImE1MDQzMmI2MDIzZDE4NzY5ZGMwMDhmZTQ2YjM0ZWVjNTYzYzdlMTYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIzIn0=", "expire_date": "2019-03-27T17:07:21.012Z"}}, {"model": "sessions.session", "pk": "e6mdhgypfqf11w2ou48m5lk7xn9prg1o", "fields": {"session_data": "NjM5NDk1Y2UyM2QxMzY5YThlYTY1Y2I4ZjNmZjZiMDAzOGE5MzhiOTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiNGI3NTY1NDc5ZmI0YjExYmI0YTcwYTU2ZTI0OGIzZTI0NDZjMGJiZiIsIl9hdXRoX3VzZXJfaWQiOiIzIn0=", "expire_date": "2019-02-16T18:05:15.071Z"}}, {"model": "sessions.session", "pk": "hv63elvf7rwo5pycg1a53czosbo6ny37", "fields": {"session_data": "MmZjM2M3YjA2Njg2YzA5NzBmNzIyNWUxNzQ0YjY4OWIyZWE1YTlkNzp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhNTA0MzJiNjAyM2QxODc2OWRjMDA4ZmU0NmIzNGVlYzU2M2M3ZTE2In0=", "expire_date": "2019-03-27T14:37:43.096Z"}}, {"model": "sessions.session", "pk": "jhdvd4fljzuobngd9nq9bo3ffrzry3bm", "fields": {"session_data": "OWY4ZDNmMjlmY2JkNGM1Y2IxYWNiYjJlNDY5MTM0YjFlZWNhYTBkZTp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI0Yjc1NjU0NzlmYjRiMTFiYjRhNzBhNTZlMjQ4YjNlMjQ0NmMwYmJmIn0=", "expire_date": "2019-03-06T00:59:47.186Z"}}, {"model": "sessions.session", "pk": "kh6ebcdd522npeo9bbzw1ejg9qs2vzx5", "fields": {"session_data": "MmZjM2M3YjA2Njg2YzA5NzBmNzIyNWUxNzQ0YjY4OWIyZWE1YTlkNzp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhNTA0MzJiNjAyM2QxODc2OWRjMDA4ZmU0NmIzNGVlYzU2M2M3ZTE2In0=", "expire_date": "2019-03-30T15:24:04.656Z"}}, {"model": "sessions.session", "pk": "p1xlgdlaxnyre6q2fxnylaanrig0xkb5", "fields": {"session_data": "Zjc3YWQyZWIyYTM0NmY0MWZjYjhkYzAzYTcwNDgwYTJmMTk3ZmU1MTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6IjMiLCJfYXV0aF91c2VyX2hhc2giOiJhNTA0MzJiNjAyM2QxODc2OWRjMDA4ZmU0NmIzNGVlYzU2M2M3ZTE2In0=", "expire_date": "2019-03-31T10:40:06.790Z"}}, {"model": "sessions.session", "pk": "p5trq5s7fr1fwcps5fkebip003dqnij9", "fields": {"session_data": "ODc3Yzk5YTFmZGJlN2FkMTcxNDZmZDc4MDUxYWE1YmIzZjMxZDY3NDp7Il9hdXRoX3VzZXJfaGFzaCI6ImE1MDQzMmI2MDIzZDE4NzY5ZGMwMDhmZTQ2YjM0ZWVjNTYzYzdlMTYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIzIn0=", "expire_date": "2019-03-27T16:59:40.831Z"}}, {"model": "sessions.session", "pk": "qle7q4ecc88jdscczq6q8bhle0czmlhw", "fields": {"session_data": "MmZjM2M3YjA2Njg2YzA5NzBmNzIyNWUxNzQ0YjY4OWIyZWE1YTlkNzp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhNTA0MzJiNjAyM2QxODc2OWRjMDA4ZmU0NmIzNGVlYzU2M2M3ZTE2In0=", "expire_date": "2019-03-27T14:38:21.932Z"}}, {"model": "sessions.session", "pk": "tum4wtyvwxfz27k0q340dpujis14guok", "fields": {"session_data": "NjM5NDk1Y2UyM2QxMzY5YThlYTY1Y2I4ZjNmZjZiMDAzOGE5MzhiOTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiNGI3NTY1NDc5ZmI0YjExYmI0YTcwYTU2ZTI0OGIzZTI0NDZjMGJiZiIsIl9hdXRoX3VzZXJfaWQiOiIzIn0=", "expire_date": "2019-02-10T20:43:42.383Z"}}, {"model": "sessions.session", "pk": "ujy895jk6pnbl3s7u6i3hggym831ta0i", "fields": {"session_data": "MmZjM2M3YjA2Njg2YzA5NzBmNzIyNWUxNzQ0YjY4OWIyZWE1YTlkNzp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhNTA0MzJiNjAyM2QxODc2OWRjMDA4ZmU0NmIzNGVlYzU2M2M3ZTE2In0=", "expire_date": "2019-03-27T14:37:56.040Z"}}, {"model": "sessions.session", "pk": "xb4d8birht5esqxyfw6a69cahnddeg3f", "fields": {"session_data": "OWY4ZDNmMjlmY2JkNGM1Y2IxYWNiYjJlNDY5MTM0YjFlZWNhYTBkZTp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI0Yjc1NjU0NzlmYjRiMTFiYjRhNzBhNTZlMjQ4YjNlMjQ0NmMwYmJmIn0=", "expire_date": "2019-03-04T09:50:59.141Z"}}, {"model": "sessions.session", "pk": "yjj33aldvej2s9wmi5uz7hkn3euvovol", "fields": {"session_data": "OWY4ZDNmMjlmY2JkNGM1Y2IxYWNiYjJlNDY5MTM0YjFlZWNhYTBkZTp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI0Yjc1NjU0NzlmYjRiMTFiYjRhNzBhNTZlMjQ4YjNlMjQ0NmMwYmJmIn0=", "expire_date": "2019-03-21T16:19:38.016Z"}}, {"model": "sessions.session", "pk": "z3mw4tpcvulyqzvtyfbn5su625n02z7h", "fields": {"session_data": "NjM5NDk1Y2UyM2QxMzY5YThlYTY1Y2I4ZjNmZjZiMDAzOGE5MzhiOTp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiNGI3NTY1NDc5ZmI0YjExYmI0YTcwYTU2ZTI0OGIzZTI0NDZjMGJiZiIsIl9hdXRoX3VzZXJfaWQiOiIzIn0=", "expire_date": "2019-02-11T09:16:18.581Z"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add lesson", "content_type": 10, "codename": "add_lesson"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change lesson", "content_type": 10, "codename": "change_lesson"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete lesson", "content_type": 10, "codename": "delete_lesson"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can view lesson", "content_type": 10, "codename": "view_lesson"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can add topic", "content_type": 11, "codename": "add_topic"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can change topic", "content_type": 11, "codename": "change_topic"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can delete topic", "content_type": 11, "codename": "delete_topic"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can view topic", "content_type": 11, "codename": "view_topic"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can add student", "content_type": 12, "codename": "add_student"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can change student", "content_type": 12, "codename": "change_student"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can delete student", "content_type": 12, "codename": "delete_student"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can view student", "content_type": 12, "codename": "view_student"}}, {"model": "auth.permission", "pk": 49, "fields": {"name": "Can add log entry", "content_type": 13, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 50, "fields": {"name": "Can change log entry", "content_type": 13, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 51, "fields": {"name": "Can delete log entry", "content_type": 13, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 52, "fields": {"name": "Can view log entry", "content_type": 13, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 53, "fields": {"name": "Can add permission", "content_type": 14, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 54, "fields": {"name": "Can change permission", "content_type": 14, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 55, "fields": {"name": "Can delete permission", "content_type": 14, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 56, "fields": {"name": "Can view permission", "content_type": 14, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 57, "fields": {"name": "Can add group", "content_type": 15, "codename": "add_group"}}, {"model": "auth.permission", "pk": 58, "fields": {"name": "Can change group", "content_type": 15, "codename": "change_group"}}, {"model": "auth.permission", "pk": 59, "fields": {"name": "Can delete group", "content_type": 15, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 60, "fields": {"name": "Can view group", "content_type": 15, "codename": "view_group"}}, {"model": "auth.permission", "pk": 61, "fields": {"name": "Can add user", "content_type": 16, "codename": "add_user"}}, {"model": "auth.permission", "pk": 62, "fields": {"name": "Can change user", "content_type": 16, "codename": "change_user"}}, {"model": "auth.permission", "pk": 63, "fields": {"name": "Can delete user", "content_type": 16, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 64, "fields": {"name": "Can view user", "content_type": 16, "codename": "view_user"}}, {"model": "auth.permission", "pk": 65, "fields": {"name": "Can add content type", "content_type": 17, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 66, "fields": {"name": "Can change content type", "content_type": 17, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 67, "fields": {"name": "Can delete content type", "content_type": 17, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 68, "fields": {"name": "Can view content type", "content_type": 17, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 69, "fields": {"name": "Can add session", "content_type": 18, "codename": "add_session"}}, {"model": "auth.permission", "pk": 70, "fields": {"name": "Can change session", "content_type": 18, "codename": "change_session"}}, {"model": "auth.permission", "pk": 71, "fields": {"name": "Can delete session", "content_type": 18, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 72, "fields": {"name": "Can view session", "content_type": 18, "codename": "view_session"}}, {"model": "auth.user", "pk": 3, "fields": {"password": "pbkdf2_sha256$120000$qFHyBfNMZAlC$eDXxBimLAT1dka4hj6l0BaYwSzRGYMiuJGVSyj731aU=", "last_login": "2019-03-17T10:40:06.765Z", "is_superuser": true, "username": "admin", "first_name": "", "last_name": "", "email": "", "is_staff": true, "is_active": true, "date_joined": "2019-01-26T13:08:40.900Z", "groups": [], "user_permissions": []}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2019-01-26T13:10:28.383Z", "user": 3, "content_type": 10, "object_id": "8", "object_repr": "Lesson 1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2019-01-26T13:10:51.835Z", "user": 3, "content_type": 10, "object_id": "9", "object_repr": "Lesson 2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2019-01-26T13:11:19.355Z", "user": 3, "content_type": 10, "object_id": "10", "object_repr": "Lesson 3", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2019-01-26T13:11:56.468Z", "user": 3, "content_type": 11, "object_id": "7", "object_repr": "Topic object (7)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2019-02-03T13:08:22.626Z", "user": 3, "content_type": 10, "object_id": "11", "object_repr": "ML #2", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2019-02-03T20:46:22.616Z", "user": 3, "content_type": 10, "object_id": "11", "object_repr": "ML Lesson #2", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"name\", \"content\"]}}]"}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2019-02-04T10:49:11.918Z", "user": 3, "content_type": 10, "object_id": "8", "object_repr": "Lesson 1", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2019-02-04T10:54:02.626Z", "user": 3, "content_type": 10, "object_id": "8", "object_repr": "Lesson 1", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 42, "fields": {"action_time": "2019-02-04T10:55:53.980Z", "user": 3, "content_type": 10, "object_id": "8", "object_repr": "Lesson 1", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 43, "fields": {"action_time": "2019-02-04T10:57:45.279Z", "user": 3, "content_type": 10, "object_id": "9", "object_repr": "Lesson 2", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 44, "fields": {"action_time": "2019-02-04T10:59:08.936Z", "user": 3, "content_type": 10, "object_id": "9", "object_repr": "Lesson 2", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 45, "fields": {"action_time": "2019-02-04T11:00:08.246Z", "user": 3, "content_type": 10, "object_id": "9", "object_repr": "Lesson 2", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 46, "fields": {"action_time": "2019-02-04T11:00:39.344Z", "user": 3, "content_type": 10, "object_id": "9", "object_repr": "Lesson 2", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 47, "fields": {"action_time": "2019-02-04T11:01:05.871Z", "user": 3, "content_type": 10, "object_id": "9", "object_repr": "Lesson 2", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 48, "fields": {"action_time": "2019-02-04T11:03:11.837Z", "user": 3, "content_type": 10, "object_id": "9", "object_repr": "Lesson 2", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 49, "fields": {"action_time": "2019-02-04T11:03:34.462Z", "user": 3, "content_type": 10, "object_id": "9", "object_repr": "Lesson 2", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 50, "fields": {"action_time": "2019-02-04T11:26:33.442Z", "user": 3, "content_type": 10, "object_id": "8", "object_repr": "Lesson 1", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\", \"code\"]}}]"}}, {"model": "admin.logentry", "pk": 51, "fields": {"action_time": "2019-02-04T11:27:18.289Z", "user": 3, "content_type": 10, "object_id": "9", "object_repr": "Lesson 2", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\", \"code\"]}}]"}}, {"model": "admin.logentry", "pk": 52, "fields": {"action_time": "2019-02-04T17:27:13.803Z", "user": 3, "content_type": 10, "object_id": "8", "object_repr": "Lesson 1", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 53, "fields": {"action_time": "2019-02-06T16:16:05.347Z", "user": 3, "content_type": 11, "object_id": "7", "object_repr": "Topic object (7)", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 54, "fields": {"action_time": "2019-02-06T16:17:53.328Z", "user": 3, "content_type": 11, "object_id": "8", "object_repr": "Topic object (8)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 55, "fields": {"action_time": "2019-02-06T16:18:01.182Z", "user": 3, "content_type": 11, "object_id": "7", "object_repr": "Topic object (7)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"lessons\"]}}]"}}, {"model": "admin.logentry", "pk": 56, "fields": {"action_time": "2019-02-06T16:31:47.992Z", "user": 3, "content_type": 10, "object_id": "12", "object_repr": "Lesson 5", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 57, "fields": {"action_time": "2019-02-06T16:39:12.736Z", "user": 3, "content_type": 10, "object_id": "12", "object_repr": "Lesson 5", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\"]}}]"}}, {"model": "admin.logentry", "pk": 58, "fields": {"action_time": "2019-02-18T09:53:25.709Z", "user": 3, "content_type": 10, "object_id": "12", "object_repr": "Lesson 5", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 59, "fields": {"action_time": "2019-02-18T09:55:21.428Z", "user": 3, "content_type": 11, "object_id": "8", "object_repr": "Topic object (8)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"lesson1\"]}}]"}}, {"model": "admin.logentry", "pk": 60, "fields": {"action_time": "2019-02-18T09:55:33.423Z", "user": 3, "content_type": 11, "object_id": "8", "object_repr": "Topic object (8)", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 61, "fields": {"action_time": "2019-02-18T09:56:07.173Z", "user": 3, "content_type": 11, "object_id": "8", "object_repr": "Topic object (8)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"lesson1\"]}}]"}}, {"model": "admin.logentry", "pk": 62, "fields": {"action_time": "2019-02-20T01:18:37.039Z", "user": 3, "content_type": 11, "object_id": "7", "object_repr": "Topic object (7)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"lesson1\", \"lesson2\", \"lesson3\"]}}]"}}, {"model": "admin.logentry", "pk": 63, "fields": {"action_time": "2019-03-03T19:33:59.398Z", "user": 3, "content_type": 12, "object_id": "1", "object_repr": "57G0rETvSmQ9wBp76BWyWOz964j1", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 64, "fields": {"action_time": "2019-03-03T21:04:19.954Z", "user": 3, "content_type": 12, "object_id": "3", "object_repr": "1234", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 65, "fields": {"action_time": "2019-03-03T21:12:07.683Z", "user": 3, "content_type": 12, "object_id": "12345", "object_repr": "", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 66, "fields": {"action_time": "2019-03-03T21:13:27.932Z", "user": 3, "content_type": 12, "object_id": "12345", "object_repr": "", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 67, "fields": {"action_time": "2019-03-03T21:32:45.689Z", "user": 3, "content_type": 12, "object_id": "6789", "object_repr": "", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 68, "fields": {"action_time": "2019-03-03T21:36:26.046Z", "user": 3, "content_type": 12, "object_id": "12348", "object_repr": "6789ab12", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 69, "fields": {"action_time": "2019-03-08T14:53:40.469Z", "user": 3, "content_type": 10, "object_id": "13", "object_repr": "Introduction", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 70, "fields": {"action_time": "2019-03-08T14:54:02.669Z", "user": 3, "content_type": 10, "object_id": "14", "object_repr": "Import Dataset", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 71, "fields": {"action_time": "2019-03-08T14:54:32.233Z", "user": 3, "content_type": 10, "object_id": "15", "object_repr": "Data Preparation", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 72, "fields": {"action_time": "2019-03-08T14:54:51.718Z", "user": 3, "content_type": 10, "object_id": "16", "object_repr": "Designing the Model", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 73, "fields": {"action_time": "2019-03-08T14:56:24.978Z", "user": 3, "content_type": 10, "object_id": "17", "object_repr": "Loss Function", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 74, "fields": {"action_time": "2019-03-08T14:56:50.828Z", "user": 3, "content_type": 10, "object_id": "18", "object_repr": "Training the Model", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 75, "fields": {"action_time": "2019-03-08T14:57:22.364Z", "user": 3, "content_type": 10, "object_id": "19", "object_repr": "Evaluating the Model", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 76, "fields": {"action_time": "2019-03-08T14:58:42.967Z", "user": 3, "content_type": 10, "object_id": "20", "object_repr": "Visualizing our Accuracy", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 77, "fields": {"action_time": "2019-03-08T14:59:24.857Z", "user": 3, "content_type": 10, "object_id": "21", "object_repr": "Conclusion", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 78, "fields": {"action_time": "2019-03-08T15:02:03.653Z", "user": 3, "content_type": 11, "object_id": "9", "object_repr": "Topic object (9)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 79, "fields": {"action_time": "2019-03-08T15:04:31.067Z", "user": 3, "content_type": 10, "object_id": "22", "object_repr": "Example Lesson", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 80, "fields": {"action_time": "2019-03-08T15:05:30.527Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 81, "fields": {"action_time": "2019-03-08T15:07:30.527Z", "user": 3, "content_type": 11, "object_id": "8", "object_repr": "Topic object (8)", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 82, "fields": {"action_time": "2019-03-08T15:07:30.556Z", "user": 3, "content_type": 11, "object_id": "7", "object_repr": "Topic object (7)", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 83, "fields": {"action_time": "2019-03-08T15:23:53.745Z", "user": 3, "content_type": 12, "object_id": "12354", "object_repr": "6789ab12345", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 84, "fields": {"action_time": "2019-03-08T15:23:53.777Z", "user": 3, "content_type": 12, "object_id": "12351", "object_repr": "6789ab1234", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 85, "fields": {"action_time": "2019-03-08T15:23:53.801Z", "user": 3, "content_type": 12, "object_id": "12350", "object_repr": "6789ab123", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 86, "fields": {"action_time": "2019-03-08T15:23:53.826Z", "user": 3, "content_type": 12, "object_id": "12349", "object_repr": "6789ab12", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 87, "fields": {"action_time": "2019-03-08T15:23:53.849Z", "user": 3, "content_type": 12, "object_id": "12347", "object_repr": "6789ab", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 88, "fields": {"action_time": "2019-03-08T15:23:53.874Z", "user": 3, "content_type": 12, "object_id": "2", "object_repr": "1234", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 89, "fields": {"action_time": "2019-03-08T15:24:08.729Z", "user": 3, "content_type": 10, "object_id": "10", "object_repr": "Lesson 3", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 90, "fields": {"action_time": "2019-03-08T15:24:08.764Z", "user": 3, "content_type": 10, "object_id": "9", "object_repr": "Lesson 2", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 91, "fields": {"action_time": "2019-03-08T15:24:08.787Z", "user": 3, "content_type": 10, "object_id": "8", "object_repr": "Lesson 1", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 92, "fields": {"action_time": "2019-03-08T16:06:40.007Z", "user": 3, "content_type": 10, "object_id": "23", "object_repr": "Introduction", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 93, "fields": {"action_time": "2019-03-08T16:09:57.052Z", "user": 3, "content_type": 10, "object_id": "24", "object_repr": "Preparing Our Data", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 94, "fields": {"action_time": "2019-03-08T16:10:26.718Z", "user": 3, "content_type": 10, "object_id": "25", "object_repr": "Separating Labels from Data", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 95, "fields": {"action_time": "2019-03-08T16:11:13.148Z", "user": 3, "content_type": 10, "object_id": "26", "object_repr": "Building our Model", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 96, "fields": {"action_time": "2019-03-08T16:12:31.252Z", "user": 3, "content_type": 10, "object_id": "27", "object_repr": "Plot our Error Values", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 97, "fields": {"action_time": "2019-03-08T16:13:23.092Z", "user": 3, "content_type": 10, "object_id": "28", "object_repr": "Reducing Number of Epochs", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 98, "fields": {"action_time": "2019-03-08T16:15:08.521Z", "user": 3, "content_type": 10, "object_id": "29", "object_repr": "Predict our MPG", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 99, "fields": {"action_time": "2019-03-08T16:18:44.035Z", "user": 3, "content_type": 11, "object_id": "11", "object_repr": "Topic object (11)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 100, "fields": {"action_time": "2019-03-08T16:18:56.682Z", "user": 3, "content_type": 11, "object_id": "9", "object_repr": "Topic object (9)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"prerequisites\"]}}]"}}, {"model": "admin.logentry", "pk": 101, "fields": {"action_time": "2019-03-08T22:59:17.871Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"available\"]}}]"}}, {"model": "admin.logentry", "pk": 102, "fields": {"action_time": "2019-03-08T23:00:45.615Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"available\"]}}]"}}, {"model": "admin.logentry", "pk": 103, "fields": {"action_time": "2019-03-08T23:03:09.536Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 104, "fields": {"action_time": "2019-03-08T23:05:55.189Z", "user": 3, "content_type": 11, "object_id": "11", "object_repr": "Topic object (11)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 105, "fields": {"action_time": "2019-03-08T23:06:19.531Z", "user": 3, "content_type": 11, "object_id": "9", "object_repr": "Topic object (9)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 106, "fields": {"action_time": "2019-03-13T14:03:38.934Z", "user": 3, "content_type": 11, "object_id": "9", "object_repr": "Topic object (9)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 107, "fields": {"action_time": "2019-03-13T14:04:16.631Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 108, "fields": {"action_time": "2019-03-13T14:04:35.168Z", "user": 3, "content_type": 11, "object_id": "9", "object_repr": "Topic object (9)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 109, "fields": {"action_time": "2019-03-13T14:04:45.666Z", "user": 3, "content_type": 11, "object_id": "11", "object_repr": "Topic object (11)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 110, "fields": {"action_time": "2019-03-16T15:24:26.332Z", "user": 3, "content_type": 12, "object_id": "12355", "object_repr": "U1h9cpqVv9T9LEl1e2KKM6yAyNx2", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 111, "fields": {"action_time": "2019-03-16T15:24:26.333Z", "user": 3, "content_type": 12, "object_id": "1", "object_repr": "57G0rETvSmQ9wBp76BWyWOz964j1", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 112, "fields": {"action_time": "2019-03-16T15:41:24.924Z", "user": 3, "content_type": 10, "object_id": "22", "object_repr": "Example Lesson", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"code\"]}}]"}}, {"model": "admin.logentry", "pk": 113, "fields": {"action_time": "2019-03-16T15:42:28.410Z", "user": 3, "content_type": 10, "object_id": "22", "object_repr": "Example Lesson", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"code\"]}}]"}}, {"model": "admin.logentry", "pk": 114, "fields": {"action_time": "2019-03-17T10:41:04.296Z", "user": 3, "content_type": 10, "object_id": "22", "object_repr": "Example Lesson", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"content\", \"code\"]}}]"}}, {"model": "admin.logentry", "pk": 115, "fields": {"action_time": "2019-03-17T10:42:18.184Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"description\"]}}]"}}, {"model": "admin.logentry", "pk": 116, "fields": {"action_time": "2019-03-17T17:10:10.664Z", "user": 3, "content_type": 11, "object_id": "9", "object_repr": "Topic object (9)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"name\", \"description\", \"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 117, "fields": {"action_time": "2019-03-17T17:10:40.695Z", "user": 3, "content_type": 11, "object_id": "11", "object_repr": "Topic object (11)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"name\", \"description\", \"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 118, "fields": {"action_time": "2019-03-17T17:12:43.214Z", "user": 3, "content_type": 11, "object_id": "9", "object_repr": "Topic object (9)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"description\"]}}]"}}, {"model": "admin.logentry", "pk": 119, "fields": {"action_time": "2019-03-17T17:14:04.084Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 120, "fields": {"action_time": "2019-03-17T17:14:34.810Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 121, "fields": {"action_time": "2019-03-17T17:14:50.408Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 122, "fields": {"action_time": "2019-03-17T17:15:27.243Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"image_url\"]}}]"}}, {"model": "admin.logentry", "pk": 123, "fields": {"action_time": "2019-03-17T17:16:05.464Z", "user": 3, "content_type": 11, "object_id": "10", "object_repr": "Topic object (10)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"name\", \"description\"]}}]"}}, {"model": "admin.logentry", "pk": 124, "fields": {"action_time": "2019-03-17T17:26:05.524Z", "user": 3, "content_type": 12, "object_id": "12356", "object_repr": "NjUyMTkxZmItODBiNS00ZWU2LTkwMTUtY2JjZmIzYWU1NmZm.MWZhZjg4ZmUtYTk5OC00YzViLTkzYzktMjEwYTExZDlhNWMy", "action_flag": 3, "change_message": ""}}]